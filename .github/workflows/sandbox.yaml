name: ⚙️ Sandbox
on:
  push: 
  workflow_dispatch:
    
jobs:
  playground:
    strategy:
      matrix:
        runner: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
      - run: npm install find-process
      - uses: actions/github-script@v7
        with:
          script: |
            
            // RUNNER_TEMP=/home/runner/work/_temp
            // runner process: /home/runner/actions-runner/cached/bin/Runner.Worker
            // runner dir: /home/runner/actions-runner/cached/_diag
            // Worker_*.log
            // line: "INFO JobRunner] Job ID <<<UUID>>>"
            
            const path = require('node:path');
            const findProcess = require('find-process');

            const runnerWorkerProcessName = 'Runner.Worker';

            const runnerWorkerProcess = await findProcess('name', runnerWorkerProcessName).then((list) => {
              if (list.length !== 1) {
                throw new Error(`Expected exactly one process with name ${runnerWorkerProcessName}, found: ${list.length}`);
              }
              return list[0];
            });
            
            
            const index = runnerWorkerProcess.bin.indexOf(path.join("bin", runnerWorkerProcessName));
            const runnerDir = runnerWorkerProcess.bin.slice(0, index);
            console.log("runnerDir", runnerDir);

            const diagDir = path.join(runnerDir, "_diag");
            console.log("diagDir", diagDir);
            
          
            const {owner, repo} = context.repo;
            const workflowRun = await github.rest.actions.getWorkflowRun({
              owner, repo,
              run_id: context.runId,
            }).then((res) => res.data);
            console.log("workflowRun.check_suite_id:", workflowRun.check_suite_id);
            
            // https://octokit.github.io/rest.js/v22/
            const checkRuns = await github.rest.checks.listForSuite({
              owner, repo,
              check_suite_id: workflowRun.check_suite_id,
              check_name: context.job,
              status: "in_progress",
              filter: "latest",
              // TODO per_page
            }).then((res) => res.data);
            console.log("checkRuns:", checkRuns);

            const checkRun = checkRuns.check_runs.find((checkRun) => checkRun.external_id == "UUID");
            console.log("checkRun:", checkRun);
                       
  
