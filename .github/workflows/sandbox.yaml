name: ~ Sandbox
on:
  workflow_dispatch:
    inputs:
      buildTimeSeconds:
        default: '10'

permissions:
  id-token: write # This is required for requesting OIDC token
  contents: write
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: sleep ${{ inputs.buildTimeSeconds }}
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}
      cancel-in-progress: false
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const thisWorkflowRun = await github.rest.actions.getWorkflowRun({
              ...context.repo, run_id: context.runId,
            }).then((res) => res.data)
            
            const thisWorkflowRunJob = await github.rest.actions.listJobsForWorkflowRunAttempt({
              ...context.repo, run_id: thisWorkflowRun.id, attempt_number: thisWorkflowRun.run_attempt ?? 1,
            }).then((res) => res.data.jobs.find((job) => job.name === context.job))
            
            const recentWorkflowRuns = await github.rest.actions.listWorkflowRuns({
              ...context.repo, workflow_id: thisWorkflowRun.workflow_id,
            }).then((res) => res.data.workflow_runs)
            
            if (thisWorkflowRun.id < recentWorkflowRuns[0]?.id) {
            
              for (const recentWorkflowRun of recentWorkflowRuns) {
            
                if (recentWorkflowRun.id === thisWorkflowRun.id) {
                  break
                }
            
                const recentWorkflowRunJob = await github.rest.actions.getJobForWorkflowRun({
                  ...context.repo,
                  job_id: thisWorkflowRunJob.id,
                  run_id: recentWorkflowRun.id,
                  run_attempt: recentWorkflowRun.run_attempt ?? 1,
                }).then((res) => res.data)
            
                // TODO only if in concurrency group
                if (recentWorkflowRunJob.status === 'waiting' ||
                    recentWorkflowRunJob.status === 'queued') {
                  continue
                }
            
                console.log('::notice::Discard this job execution, due to a newer workflow run.%0A' +
                    'Workflow: ' + recentWorkflowRun.html_url + '%0A' +
                    `  Job: ${thisWorkflowRunJob.id}: ` + recentWorkflowRunJob.html_url)
                process.exit(1)
            
                _github.setFailed('This is a failure')
              }
            }

      - run: echo Deploy...
            
            
